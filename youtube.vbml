#--------------------------------------------------------------------------------------------------
# Settings
#--------------------------------------------------------------------------------------------------

source: https://raw.githubusercontent.com/omega-gg/backend/master/youtube.vbml

api: 1.0.1

version: 1.0.23

title: Youtube

host: youtube.com

cover: cover/youtube.png

items:
    playlist:
        title: Tracks
    folder:
        title: Channels
    folder:
        title: Playlists

validate: ^youtube.com|^youtu.be

#--------------------------------------------------------------------------------------------------
# Interface
#--------------------------------------------------------------------------------------------------

TRACK_ID: |
    SET url (URL_REMOVE_PREFIX url)
    IF (START_WITH url "youtu.be")
        RETURN (URL_ELEMENT url 9)
    ELIF (EQUAL (START_WITH url "youtube.com") false)
        RETURN
    FI
    SET index (INDEX_END url (REGEXP "\\?v=|&v=|/v/|/embed/"))
    IF (NOT_EQUAL index -1)
        RETURN (URL_ELEMENT url index)
    FI

PLAYLIST_INFO: |
    SET url (URL_REMOVE_PREFIX url)
    IF (EQUAL (START_WITH url "youtube.com") false)
        RETURN false
    FI
    SET index (INDEX_OF url (REGEXP "/user/|/channel/|/c/"))
    IF (EQUAL index -1)
        SET index (INDEX_END url (REGEXP "\\?p=|&p=|\\?list=|&list="))
        IF (EQUAL index -1)
            SET index (INDEX_END (REGEXP "\\?channel_id=|&channel_id="))
            IF (EQUAL index -1)
                SET string (URL_ELEMENT url 12)
                IF (LENGTH string)
                AND (EQUAL (INDEX_OF url (REGEXP "[/\\?#.]") 12) -1)
                    # NOTE: We make it a feed by default.
                    SET type "feed"
                    SET id string
                ELSE
                    RETURN false
                FI
            ELSE
                SET type "feed"
                SET id (APPEND "channel/" (URL_ELEMENT url index))
            FI
            RETURN true
        FI
        SET type "playlist"
        SET id (URL_ELEMENT url index)
    ELSE
        SET type "feed"
        SET id (URL_ELEMENT url 2 (ADD index 1))
    FI
    RETURN true

URL_TRACK: |
    RETURN (APPEND "https://www.youtube.com/watch?v=" id "&ucbcb=1")

URL_PLAYLIST: |
    IF (EQUAL type "feed")
        RETURN (APPEND "https://www.youtube.com/" id "&ucbcb=1")
    ELSE
        RETURN (APPEND "https://www.youtube.com/playlist?list=" id "&ucbcb=1")
    FI

QUERY_SOURCE: |
    SET url (URL_REMOVE_PREFIX url)
    IF (START_WITH url "youtu.be")
        SET id (URL_ELEMENT url 9)
    ELIF (START_WITH url "youtube.com")
        SET index (INDEX_END url (REGEXP "\\?v=|&v=|/v/|/embed/"))
        IF (EQUAL index -1)
            RETURN false
        FI
        SET id (URL_ELEMENT url index)
    ELSE
        RETURN false
    FI
    SET url (APPEND "https://www.youtube.com/get_video_info?html5=1&video_id=" id "&el=detailpage")
    SET queryData id
    RETURN true

QUERY_TRACK: |
    SET url (URL_REMOVE_PREFIX url)
    IF (START_WITH url "youtu.be")
        SET string (URL_ELEMENT url 9)
    ELIF (START_WITH url "youtube.com")
        SET index (INDEX_END url (REGEXP "\\?v=|&v=|/v/|/embed/"))
        IF (EQUAL index -1)
            RETURN false
        FI
        SET string (URL_ELEMENT url index)
    ELSE
        RETURN false
    FI
    SET url (APPEND "https://www.youtube.com/watch?v=" string "&ucbcb=1")
    RETURN true

QUERY_PLAYLIST: |
    SET url (URL_REMOVE_PREFIX url)
    IF (EQUAL (START_WITH url "youtube.com") false)
        RETURN false
    FI
    SET index (INDEX_OF url (REGEXP "/user/|/channel/|/c/"))
    IF (EQUAL index -1)
        SET index (INDEX_END url (REGEXP "\\?p=|&p=|\\?list=|&list="))
        IF (EQUAL index -1)
            SET index (INDEX_END url (REGEXP "\\?channel_id=|&channel_id="))
            IF (EQUAL index -1)
                SET string (URL_ELEMENT url 12)
                IF (LENGTH string)
                AND (EQUAL (INDEX_OF url (REGEXP "[/\\?#.]") 12) -1)
                    # NOTE: We make it a feed by default.
                    SET url (APPEND "https://www.youtube.com/" string "/videos?view=0&ucbcb=1")
                    SET id 1
                ELSE
                    SET url ""
                    RETURN false
                FI
            ELSE
                SET string (APPEND "channel/" (URL_ELEMENT url index))
                SET url (APPEND "https://www.youtube.com/" string "/videos?view=0&ucbcb=1")
                SET id 1
            FI
        ELSE
            SET string (URL_ELEMENT url index)
            SET url (APPEND "https://www.youtube.com/playlist?list=" string "&ucbcb=1")
        FI
    ELSE
        SET string (URL_ELEMENT url 2 (ADD index 1))
        SET url (APPEND "https://www.youtube.com/" string "/videos?view=0&ucbcb=1")
        SET id 1
    FI
    RETURN true

CREATE_QUERY: |
    IF (EQUAL method "search")
        IF (EQUAL label "tracks")
            SET url "https://www.youtube.com/results"
            URL_ADD_QUERY url "search_query" q
            URL_ADD_QUERY url "sp" "EgIQAQ%253D%253D"
            URL_ADD_QUERY url "ucbcb" "1"
            SET id 2
        ELIF (EQUAL label "channels")
            SET url "https://www.youtube.com/results"
            URL_ADD_QUERY url "search_query" q
            URL_ADD_QUERY url "sp" "EgIQAg%253D%253D"
            URL_ADD_QUERY url "ucbcb" "1"
            SET id 1
        ELIF (EQUAL label "playlists")
            SET url "https://www.youtube.com/results"
            URL_ADD_QUERY url "search_query" q
            URL_ADD_QUERY url "sp" "EgIQAw%253D%253D"
            URL_ADD_QUERY url "ucbcb" "1"
        FI
    ELIF (EQUAL method "related")
    AND (EQUAL label "tracks")
        SET url (APPEND "https://www.youtube.com/watch?v=" q "&ucbcb=1")
        SET id 3
    FI

EXTRACT_SOURCE: |
    SET data (READ data "utf-8")
    IF (EQUAL id 2)
        SET javascript (JSON_EXTRACT_HTML data "jsUrl")
        IF (EQUAL javascript "")
            RETURN
        FI
        SET javascript (URL_GENERATE javascript "https://www.youtube.com")
        IF (EQUAL (LIST_GET global 0) javascript)
            #--------------------------------------------------------------------------------------
            # Apply signature
            #--------------------------------------------------------------------------------------
            SET listMedias (LIST_GET queryData 0)
            SET listAudios (LIST_GET queryData 1)
            #SET script (JS_EVALUATE (LIST_GET global 1))
            SET script (LIST_GET global 1)
            FOREACH (LIST "144" "240" "360" "480" "720" "1080" "1440" "2160") value
                SET source (LIST_GET listMedias i)
                IF (LENGTH source)
                    LIST_APPEND sources (LIST (REGEXP_CAP source \
                                               "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)" 1))
                FI
                SET source (LIST_GET listAudios i)
                IF (LENGTH source)
                    LIST_APPEND sources (LIST (REGEXP_CAP source \
                                               "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)" 1))
                FI
                SET i (ADD i 1)
            END
            SET signatures (JS_CALLS script sources)
            SET i 0
            FOREACH (LIST "144" "240" "360" "480" "720" "1080" "1440" "2160") value
                SET source (LIST_GET listMedias i)
                IF (EQUAL (LENGTH source) 0)
                    SET i (ADD i 1)
                    CONTINUE
                FI
                SET source (REPLACE source (REGEXP "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)") \
                                           (APPEND "&sig=" (LIST_TAKE_AT signatures 0)))
                HASH_SET medias value source
                SET source (LIST_GET listAudios i)
                IF (EQUAL (LENGTH source) 0)
                    SET i (ADD i 1)
                    CONTINUE
                FI
                SET source (REPLACE source (REGEXP "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)") \
                                           (APPEND "&sig=" (LIST_TAKE_AT signatures 0)))
                HASH_SET audios value source
                SET i (ADD i 1)
            END
            #--------------------------------------------------------------------------------------
            SET expiry (ADD (DATE) 60) # Two hours
        ELSE
            HASH_SET next "url" javascript
            HASH_SET next "id" 3
            HASH_SET next "queryData" queryData
        FI
    ELIF (EQUAL id 3)
        SET index (LAST_INDEX_OF data "function(a){a=a.split(\"\")")
        SET function (JS_EXTRACT data "function(a)" index)
        SET object (REGEXP_CAP function ";([a-zA-Z0-9$]+)\\." 1)
        SET object (JS_EXTRACT data (APPEND "var " object '='))
        SET function (REPLACE function "function(a)" "function b(a)")
        SET script (APPEND "(function(a){" object ';' function "return b(a);})")
        SET global (LIST url script)
        #------------------------------------------------------------------------------------------
        # Apply signature
        #------------------------------------------------------------------------------------------
        SET listMedias (LIST_GET queryData 0)
        SET listAudios (LIST_GET queryData 1)
        #SET script (JS_EVALUATE script)
        #SET i 0
        FOREACH (LIST "144" "240" "360" "480" "720" "1080" "1440" "2160") value
            SET source (LIST_GET listMedias i)
            IF (LENGTH source)
                LIST_APPEND sources (LIST (REGEXP_CAP source "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)" 1))
            FI
            SET source (LIST_GET listAudios i)
            IF (LENGTH source)
                LIST_APPEND sources (LIST (REGEXP_CAP source "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)" 1))
            FI
            SET i (ADD i 1)
        END
        SET signatures (JS_CALLS script sources)
        SET i 0
        FOREACH (LIST "144" "240" "360" "480" "720" "1080" "1440" "2160") value
            SET source (LIST_GET listMedias i)
            IF (EQUAL (LENGTH source) 0)
                SET i (ADD i 1)
                CONTINUE
            FI
            SET source (REPLACE source (REGEXP "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)") \
                                       (APPEND "&sig=" (LIST_TAKE_AT signatures 0)))
            HASH_SET medias value source
            SET source (LIST_GET listAudios i)
            IF (EQUAL (LENGTH source) 0)
                SET i (ADD i 1)
                CONTINUE
            FI
            SET source (REPLACE source (REGEXP "&s=([a-zA-Z0-9\\.\\-\\_\\=]+)") \
                                       (APPEND "&sig=" (LIST_TAKE_AT signatures 0)))
            HASH_SET audios value source
            SET i (ADD i 1)
        END
        #------------------------------------------------------------------------------------------
        SET expiry (ADD (DATE) 60) # Two hours
    ELSE # if (id == 0 || id == 1)
        #------------------------------------------------------------------------------------------
        # Load "formats"
        #------------------------------------------------------------------------------------------
        SET sources (URL_DECODE (SLICE_IN data "%22formats%22" "%5D"))
        SET list (SPLIT sources "},{")
        FOREACH list value
            #--------------------------------------------------------------------------------------
            # Load media
            #--------------------------------------------------------------------------------------
            SET type (MID (SLICE_IN value "\"mimeType\":\"" '"') 6 3)
            IF  (NOT_EQUAL type "mp4")
            AND (NOT_EQUAL type "web")
                CONTINUE
            FI
            SET quality (MID (SLICE_IN value "\"quality\":\"" '"') 0 3)
            IF (EQUAL quality "sma")
                SET quality "240"
            ELIF (NOT_EQUAL quality "med")
                SET quality "360"
            ELIF (NOT_EQUAL quality "lar")
                SET quality "480"
            ELIF (NOT_EQUAL quality "hd7")
                SET quality "720"
            ELIF (NOT_EQUAL quality "hd1")
                SET quality "1080"
            ELIF (NOT_EQUAL quality "hig")
                SET quality "1440"
            ELSE
                CONTINUE
            FI
            #--------------------------------------------------------------------------------------
            # Extract url
            #--------------------------------------------------------------------------------------
            SET source (SLICE_IN value "\"url\":\"" '"')
            IF (LENGTH source)
                SET source (HTML_TO_UTF8 source)
            ELSE
                SET value (HTML_TO_UTF8 (SLICE_IN value "\"signatureCipher\":\"" '"'))
                SET source    (SLICE_IN value "url=" '&')
                SET signature (SLICE_IN value (REGEXP "^s=|&s=") '&')
                IF (LENGTH signature)
                    SET source (URL_DECODE (APPEND source "&s=" signature))
                ELSE
                    SET source (URL_DECODE source)
                FI
            FI
            #--------------------------------------------------------------------------------------
            HASH_SET medias quality source
            #--------------------------------------------------------------------------------------
        END
        #------------------------------------------------------------------------------------------
        # Load "adaptiveFormats"
        #------------------------------------------------------------------------------------------
        SET sources (URL_DECODE (SLICE_IN data "%22adaptiveFormats%22" "%5D"))
        SET list (SPLIT sources "},{")
        #SET i 0
        FOREACH list value
            IF (CONTAIN value "+vorbis")
                #----------------------------------------------------------------------------------
                # Extract url
                #----------------------------------------------------------------------------------
                SET audio (SLICE_IN value "\"url\":\"" '"')
                IF (LENGTH audio)
                    SET audio (HTML_TO_UTF8 audio)
                ELSE
                    SET value (HTML_TO_UTF8 (SLICE_IN value "\"signatureCipher\":\"" '"'))
                    SET audio     (SLICE_IN value "url=" '&')
                    SET signature (SLICE_IN value (REGEXP "^s=|&s=") '&')
                    IF (LENGTH signature)
                        SET audio (URL_DECODE (APPEND audio "&s=" signature))
                    ELSE
                        SET audio (URL_DECODE audio)
                    FI
                FI
                #----------------------------------------------------------------------------------
                LIST_REMOVE_AT list i
                BREAK
            FI
            SET i (ADD i 1)
        END
        IF (EQUAL (LENGTH audio) 0)
            SET i 0
            FOREACH list value
                IF (CONTAIN value "\"mp4a")
                    #------------------------------------------------------------------------------
                    # Extract url
                    #------------------------------------------------------------------------------
                    SET audio (SLICE_IN value "\"url\":\"" '"')
                    IF (LENGTH audio)
                        SET audio (HTML_TO_UTF8 audio)
                    ELSE
                        SET value (HTML_TO_UTF8 (SLICE_IN value "\"signatureCipher\":\"" '"'))
                        SET audio     (SLICE_IN value "url=" '&')
                        SET signature (SLICE_IN value (REGEXP "^s=|&s=") '&')
                        IF (LENGTH signature)
                            SET audio (URL_DECODE (APPEND audio "&s=" signature))
                        ELSE
                            SET audio (URL_DECODE audio)
                        FI
                    FI
                    #------------------------------------------------------------------------------
                    LIST_REMOVE_AT list i
                    BREAK
                FI
                SET i (ADD i 1)
            END
        FI
        FOREACH list value
            #--------------------------------------------------------------------------------------
            # Load adaptative
            #--------------------------------------------------------------------------------------
            SET mime (MID (SLICE_IN value "\"mimeType\":\"" '"') 6 3)
            IF (NOT_EQUAL mime "mp4")
                CONTINUE
            FI
            SET quality (SLICE_IN value "\"qualityLabel\":\"" 'p')
            IF (EQUAL (INDEX_OF quality (REGEXP "144|240|360|480|720|1080|1440|2160")) -1)
                CONTINUE
            FI
            #--------------------------------------------------------------------------------------
            # Extract url
            #--------------------------------------------------------------------------------------
            SET media (SLICE_IN value "\"url\":\"" '"')
            IF (LENGTH media)
                SET media (HTML_TO_UTF8 media)
                # NOTE: When the duration is equal zero the source is invalid, so we skip it.
                IF (NOT_EQUAL (INDEX_OF media "dur=0.000") -1)
                    CONTINUE
                FI
            ELSE
                SET value (HTML_TO_UTF8 (SLICE_IN value "\"signatureCipher\":\"" '"'))
                SET media     (SLICE_IN value "url=" '&')
                SET signature (SLICE_IN value (REGEXP "^s=|&s=") '&')
                IF (LENGTH signature)
                    SET media (URL_DECODE (APPEND media "&s=" signature))
                ELSE
                    SET media (URL_DECODE media)
                FI
            FI
            HASH_SET medias quality media
            HASH_SET audios quality audio
            #--------------------------------------------------------------------------------------
        END
        #------------------------------------------------------------------------------------------
        # NOTE: This request can be useful to bypass the age lock.
        IF (EQUAL (COUNT medias) 0)
            IF (EQUAL id 1)
                RETURN
            FI
            HASH_SET next "url" (APPEND \
                                 "https://www.youtube.com/get_video_info?html5=1&video_id=" \
                                 queryData "&el=embedded")
            HASH_SET next "id" 1
            HASH_SET next "queryData" queryData
            RETURN
        FI
        #------------------------------------------------------------------------------------------
        # Checking signature
        #------------------------------------------------------------------------------------------
        FOREACH (LIST "144" "240" "360" "480" "720" "1080" "1440" "2160") value
            SET string (HASH_GET medias value)
            IF (EQUAL (CONTAIN string "&s=") false)
                CONTINUE
            FI
            FOREACH (LIST "144" "240" "360" "480" "720" "1080" "1440" "2160") value
                LIST_APPEND listMedias (HASH_GET medias value)
                LIST_APPEND listAudios (HASH_GET audios value)
            END
            HASH_SET next "url" (APPEND "https://www.youtube.com/watch?v=" queryData "&ucbcb=1")
            HASH_SET next "id" 2
            HASH_SET next "queryData" (LIST listMedias listAudios)
            RETURN
        END
        #------------------------------------------------------------------------------------------
        SET expiry (ADD (DATE) 60) # Two hours
    FI

EXTRACT_TRACK: |
    SET data (READ data "utf-8")
    SET index (INDEX_OF data "=\"og:image")
    SET cover (HTML_ATTRIBUTE data "content" index)
    SET cover (REPLACE cover "https://" "http://")
    SET json (SLICE data "\"videoDetails\"" "\"playerConfig\"")
    SET title (JSON_EXTRACT_UTF8 json "title")
    SET author (JSON_EXTRACT_UTF8 json "author")
    SET duration (JSON_EXTRACT json "lengthSeconds")
    SET index (INDEX_OF data "itemprop=\"channelId")
    SET feed (HTML_ATTRIBUTE data "content" index)
    SET index (INDEX_OF data "itemprop=\"uploadDate" index)
    SET date (HTML_ATTRIBUTE data "content" index)
    SET feed (APPEND "https://www.youtube.com/channel/" (URL_PATH feed))
    SET duration (MULTIPLY duration 1000)
    SET date (DATE date "yyyy-MM-dd")

EXTRACT_PLAYLIST: |
    SET data (READ data "utf-8")
    IF (EQUAL id 1) # Feed
        IF (EQUAL queryData "")
            SET cover (HTML_ATTRIBUTE data "href" (INDEX_OF data "\"image_src\""))
            SET title (HTML_ATTRIBUTE_UTF8 data "content" (INDEX_OF data "\"og:title\""))
            SET index (INDEX_OF "data-uix-load-more-href=\"")
            IF (EQUAL index -1)
                SET url (HTML_ATTRIBUTE data "data-uix-load-more-href" index)
                SET url (APPEND "https://www.youtube.com" (URL_DECODE url))
                SET id 1
                SET queryData 1
            FI
        ELSE
            SET data (HTML_TO_UTF8 (JSON_EXTRACT_HTML data "content_html"))
        FI
        SET list (SLICES data "\"gridVideoRenderer\"" "}}}")
        FOREACH list value
            SET id (JSON_EXTRACT value "videoId")
            HASH_SET track "state" "default"
            HASH_SET track "source" (APPEND "https://www.youtube.com/watch?v=" id)
            HASH_SET track "title" (JSON_EXTRACT_UTF8 value "text")
            HASH_SET track "cover" (APPEND "http://i.ytimg.com/vi/" id "/hqdefault.jpg")
            LIST_APPEND tracks track
        END
    ELIF (EQUAL id 2) # Search tracks
        SET list (SLICES data "\"videoRenderer\"" "}}}")
        FOREACH list value
            SET id (JSON_EXTRACT value "videoId")
            HASH_SET track "state" "default"
            HASH_SET track "source" (APPEND "https://www.youtube.com/watch?v=" id)
            HASH_SET track "title" (JSON_EXTRACT_UTF8 value "text")
            HASH_SET track "cover" (APPEND "http://i.ytimg.com/vi/" id "/hqdefault.jpg")
            LIST_APPEND tracks track
        END
        IF (EQUAL queryData "")
            SET index (INDEX_OF data "class=\"branded-page-box search-pager")
            IF (EQUAL index -1)
                RETURN
            FI
            HASH_SET next "url" (APPEND "https://www.youtube.com" \
                                        (HTML_ATTRIBUTE data "href" index))
            HASH_SET next "id" 2
            HASH_SET next "queryData" 1
        FI
    ELIF (EQUAL id 3) # Related tracks
        IF (EQUAL queryData "")
            SET index (INDEX_OF data "\\\"continuation\\\"")
            SET json (SLICE_IN data "\\\"continuation\\\":\\\"" "\\\"" (ADD index 1))
            IF (NOT_EQUAL json "")
                HASH_SET next "url" (APPEND \
                                     "https://www.youtube.com/related_ajax?continuation=" \
                                     (URL_DECODE json))
                HASH_SET next "id" 3
                HASH_SET next "queryData" 1
            FI
        ELSE
            SET index (INDEX_OF data "\"body\"")
            SET data (HTML_TO_UTF8 (JSON_EXTRACT_HTML data "watch-more-related" index))
        FI
        SET list (SLICES data "\"compactVideoRenderer\"" "}}}")
        FOREACH list value
            SET id (JSON_EXTRACT value "videoId")
            HASH_SET track "state" "default"
            HASH_SET track "source" (APPEND "https://www.youtube.com/watch?v=" id)
            HASH_SET track "title" (JSON_EXTRACT_UTF8 value "simpleText")
            HASH_SET track "cover" (APPEND "http://i.ytimg.com/vi/" id "/hqdefault.jpg")
            LIST_APPEND tracks track
        END
    ELSE # Playlist
        IF (EQUAL queryData "")
            SET index (INDEX_OF data "<meta name=\"title")
            SET title (HTML_ATTRIBUTE_UTF8 data "content" index)
            IF (EQUAL index -1)
                SET data (HTML_ATTRIBUTE data "data-uix-load-more-href" index)
                HASH_SET next "url" (APPEND "https://www.youtube.com" (URL_DECODE data))
                HASH_SET next "queryData" 1
            FI
        ELSE
            SET data (HTML_TO_UTF8 (JSON_EXTRACT_HTML data "content_html"))
        FI
        SET list (SLICES data "\"playlistVideoRenderer\"" "}}}")
        FOREACH list value
            SET id (JSON_EXTRACT value "videoId")
            HASH_SET track "state" "default"
            HASH_SET track "source" (APPEND "https://www.youtube.com/watch?v=" id)
            HASH_SET track "title" (JSON_EXTRACT_UTF8 value "text")
            HASH_SET track "cover" (APPEND "http://i.ytimg.com/vi/" id "/hqdefault.jpg")
            LIST_APPEND tracks track
        END
    FI

EXTRACT_FOLDER: |
    SET data (READ data "utf-8")
    IF (EQUAL id 1) # Search channels
        SET list (SLICES data "\"channelRenderer\"" "}}}")
        FOREACH list value
            SET id (JSON_EXTRACT value "url")
            SET cover (JSON_EXTRACT_UTF8 value "url" (INDEX_OF value "\"thumbnails\""))
            SET cover (MID cover 0 (INDEX_OF cover '='))
            HASH_SET item "type" "feed"
            HASH_SET item "state" "default"
            HASH_SET item "source" (APPEND "https://www.youtube.com" id)
            HASH_SET item "title" (JSON_EXTRACT_UTF8 value "simpleText")
            HASH_SET item "cover" (APPEND "https:" cover)
            LIST_APPEND items item
        END
    ELSE # Search playlists
        SET list (SLICES data "\"playlistRenderer\"" "}}}")
        FOREACH list value
            SET id (JSON_EXTRACT value "playlistId")
            SET cover (JSON_EXTRACT_UTF8 value "url" (INDEX_OF value "\"thumbnails\""))
            SET cover (MID cover 0 (INDEX_OF cover '?'))
            HASH_SET item "type" "playlist"
            HASH_SET item "state" "default"
            HASH_SET item "source" (APPEND "https://www.youtube.com/playlist?list=" id)
            HASH_SET item "title" (JSON_EXTRACT_UTF8 value "simpleText")
            HASH_SET item "cover" cover
            LIST_APPEND items item
        END
        IF (EQUAL queryData "")
            SET index (INDEX_OF data "class=\"branded-page-box search-pager")
            IF (EQUAL index -1)
                RETURN
            FI
            HASH_SET next "url" (APPEND "https://www.youtube.com" \
                                        (HTML_ATTRIBUTE data "href" index))
            HASH_SET next "id" id
            HASH_SET next "queryData" 1
        FI
    FI
