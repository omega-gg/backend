# VBML 1.0.4
#--------------------------------------------------------------------------------------------------
# Properties
#--------------------------------------------------------------------------------------------------

type: backend

source: https://raw.githubusercontent.com/omega-gg/backend/master/facebook.vbml

api: 1.0.4

version: 1.0.0

title: Facebook

host: facebook.com

cover: cover/facebook.png

validate: ^facebook.com

#--------------------------------------------------------------------------------------------------
# Routines
#--------------------------------------------------------------------------------------------------

TRACK_ID: |
    SET url (URL_REMOVE_PREFIX url)
    IF (EQUAL (START_WITH url "facebook.com/") false)
        RETURN ""
    FI
    SET index (INDEX_END url (REGEXP "\\?v=|/embed/|/videos/"))
    IF (NOT_EQUAL index -1)
        RETURN (URL_ELEMENT url index)
    FI

PLAYLIST_INFO: |
    SET url (URL_REMOVE_PREFIX url)
    IF (EQUAL (START_WITH url "facebook.com/") false)
    OR (EQUAL (CONTAIN url "/videos") false)
    OR (NOT_EQUAL (COUNT_STRING url '/') 2)
        RETURN false
    FI
    SET type "feed"
    SET id (URL_ELEMENTS url 2 (INDEX_END url '/'))
    RETURN true

URL_TRACK: |
    RETURN (APPEND "https://www.facebook.com/watch/?v=" id)

URL_PLAYLIST: |
    RETURN (APPEND "https://www.facebook.com/" id "/videos")

QUERY_SOURCE: |
    SET url (URL_REMOVE_PREFIX url)
    IF (EQUAL (START_WITH url "facebook.com/") false)
        RETURN false
    FI
    SET index (INDEX_END url (REGEXP "\\?v=|/embed/"))
    IF (EQUAL index -1)
        RETURN false
    FI
    SET url (URL_ELEMENT url index)
    SET url (APPEND "https://www.facebook.com/video/playback/dash_mpd_debug.mpd?v=" url \
                    "&dummy=.mpd")
    # NOTE: This seems required to get proper results.
    SET header '"Sec-Fetch-Mode" "navigate"'
    RETURN true

QUERY_TRACK: |
    # NOTE: This seems required to get proper json results.
    SET header '"accept" "text/html'
    RETURN true

QUERY_PLAYLIST: |
    # NOTE: This seems required to get proper json results.
    SET header (APPEND '"Sec-Fetch-Mode" "navigate"' \
                       '"accept" "text/html')
    RETURN true

EXTRACT_SOURCE: |
    SET data (READ data "utf-8")
    SET audio (SLICE_IN data "mimeType=\"audio/mp4\"" "</BaseURL>")
    SET audio (HTML_TO_UTF8 (MID audio (INDEX_END audio <BaseURL>)))
    SET list (SLICES_IN data "mimeType=\"video/mp4\"" "</BaseURL>")
    FOREACH list value
        SET quality (CHOP (HTML_ATTRIBUTE value "FBQualityLabel") 1)
        SET value (HTML_TO_UTF8 (MID value (INDEX_END value <BaseURL>)))
        HASH_SET medias quality value
        HASH_SET audios quality audio
    END

EXTRACT_TRACK: |
    SET data (READ data "utf-8")
    SET index (INDEX_OF data "property=\"og:title\"")
    SET title (HTML_ATTRIBUTE_UTF8 data "content" index)
    SET index (INDEX_OF data "property=\"og:image\"")
    SET cover (HTML_ATTRIBUTE_UTF8 data "content" index)
    SET feed (JSON_EXTRACT data "page_token")
    SET author (JSON_EXTRACT_UTF8 data "name" (INDEX_END data "\"actors\""))

EXTRACT_PLAYLIST: |
    SET data (READ data "utf-8")
    SET index (INDEX_OF data "property=\"og:title\"")
    SET title (HTML_ATTRIBUTE_UTF8 data "content" index)
    SET index (INDEX_OF data "property=\"og:image\"")
    SET cover (HTML_ATTRIBUTE_UTF8 data "content" index)
    SET data (JSON_EXTRACT_HTML data "edges" (INDEX_END data "\"all_videos\""))
    SET list (JSON_SPLIT data)
    FOREACH list data
        PRINT data
        SET index (INDEX_END data "\"VideoPageVideoThumbnailVideoChannel\"")
        # NOTE: For some reason there's an extra '/' at the end of the url.
        HASH_SET track "source" (CHOP (JSON_EXTRACT data "url" index) 1)
        SET index (INDEX_END data "\"savable_title\"")
        HASH_SET track "title" (JSON_EXTRACT_UTF8 data "text" index)
        SET index (INDEX_END data "\"VideoThumbnailImage\"")
        HASH_SET track "cover" (JSON_EXTRACT data "uri" index)
        SET index (INDEX_END data "\"owner\"")
        HASH_SET track "author" (JSON_EXTRACT_UTF8 data "name" INDEX)
        HASH_SET track "feed" (JSON_EXTRACT data "uri_token" INDEX)
        HASH_SET track "duration" (JSON_EXTRACT data "playable_duration_in_ms")
        HASH_SET track "date" (JSON_EXTRACT data "publish_time")
        LIST_APPEND tracks track
    END
