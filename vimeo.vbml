#--------------------------------------------------------------------------------------------------
# Settings
#--------------------------------------------------------------------------------------------------

source: https://raw.githubusercontent.com/omega-gg/backend/master/vimeo.vbml

api: 1.0.0

version: 1.0.0

title: Vimeo

host: vimeo.com

cover: cover/vimeo.png

items:
    playlist:
        title: Tracks
    folder:
        title: People
    folder:
        title: Channels
    folder:
        title: Groups

validate: ^vimeo.com|^player.vimeo.com

#--------------------------------------------------------------------------------------------------
# Interface
#--------------------------------------------------------------------------------------------------

TRACK_ID: |
    SET id (LAST_INDEX_END url "/")
    IF (EQUAL id -1)
        RETURN ""
    FI
    SET id (URL_ELEMENT url id)
    IF (EQUAL id 0)
    OR (CONTAIN url (APPEND_CHAR "/channels/" id))
    OR (CONTAIN url (APPEND_CHAR "/groups/" id))
        RETURN ""
    FI
    RETURN id

PLAYLIST_INFO: |
    SET url (URL_REMOVE_PREFIX url)
    IF (EQUAL (START_WITH url "vimeo.com") false)
        RETURN false
    FI
    IF (START_WITH url "vimeo.com/channels/")
    OR (START_WITH url "vimeo.com/groups/")
        SET type "feed"
        SET id (URL_ELEMENT url 2 10)
    ELIF (START_WITH url "vimeo.com/")
        SET id (URL_ELEMENT url 10)
        IF (NUMBER id)
            RETURN false
        FI
        SET type "feed"
    FI
    RETURN true

URL_TRACK: |
    RETURN (APPEND_CHAR "https://vimeo.com/" id)

URL_PLAYLIST: |
    RETURN (APPEND_CHAR "https://vimeo.com/" id)

QUERY_SOURCE: |
    SET id (LAST_INDEX_END url "/")
    IF (EQUAL id -1)
        RETURN false
    FI
    SET id (URL_ELEMENT url id)
    IF (EQUAL id "")
    OR (CONTAIN url (APPEND_CHAR "/channels/" id))
    OR (CONTAIN url (APPEND_CHAR "/groups/" id))
        RETURN false
    FI
    SET url (APPEND_CHAR "https://player.vimeo.com/video/" id)
    RETURN true

QUERY_TRACK: |
    SET id (LAST_INDEX_END url "/")
    IF (EQUAL id -1)
        RETURN false
    FI
    SET id (URL_ELEMENT url id)
    IF (EQUAL id "")
    OR (CONTAIN url (APPEND_CHAR "/channels/" id))
    OR (CONTAIN url (APPEND_CHAR "/groups/" id))
        RETURN false
    FI
    SET url (APPEND_CHAR "https://vimeo.com/" id)
    RETURN true

QUERY_PLAYLIST: |
    SET url (URL_REMOVE_PREFIX url)
    IF (EQUAL (START_WITH url "vimeo.com") false)
        RETURN false
    FI
    IF (START_WITH url "vimeo.com/channels/")
    OR (START_WITH url "vimeo.com/groups/")
        SET id (URL_ELEMENT url 2 10)
    ELIF (START_WITH url "vimeo.com/")
        SET id (URL_ELEMENT url 10)
        IF (NUMBER id)
            RETURN false
        FI
    FI
    IF (EQUAL id "")
        RETURN false
    FI
    IF (START_WITH id "tag:")
        SET url (APPEND_CHAR "https://vimeo.com/" id "/page:1/sort:date/format:thumbnail")
    ELSE
        SET url (APPEND_CHAR "https://vimeo.com/" id "/videos/page:1/sort:date/format:thumbnail")
    FI
    RETURN true

CREATE_QUERY: |
    IF (EQUAL method "search")
        IF (EQUAL label "tracks")
            SET url "https://vimeo.com/search/page:1/sort:relevant/format:thumbnail"
            URL_ADD_QUERY url "q" q
            URL_ADD_QUERY url "type" "video"
            SET id 1
            SET header true
        ELIF (EQUAL label "people")
            SET url "https://vimeo.com/search/people/page:1/sort:relevant/format:thumbnail"
            URL_ADD_QUERY url "q" q
            SET id 1
            SET header true
        ELIF (EQUAL label "channels")
            SET url "https://vimeo.com/search/channels/page:1/sort:relevant/format:thumbnail"
            URL_ADD_QUERY url "q" q
            SET header true
        ELIF (EQUAL label "groups")
            SET url "https://vimeo.com/search/groups/page:1/sort:relevant/format:thumbnail"
            URL_ADD_QUERY url "q" q
            SET header true
        FI
    ELIF (EQUAL method "related")
    AND (EQUAL label "tracks")
        SET url (APPEND_CHAR "https://vimeo.com/" q \
                             "/collections/channels/sort:relevant/format:thumbnail")
        SET id 2
    FI

EXTRACT_SOURCE: |
    SET data (READ data "utf-8")
    SET data (JSON_EXTRACT_HTML data "progressive")
    SET list (JSON_SPLIT data)
    FOREACH list data
        SET quality (JSON_EXTRACT data "quality")
        IF (EQUAL quality "270p")
            SET_HASH medias "240" (JSON_EXTRACT data "url")
        ELIF (EQUAL quality "360p")
            SET_HASH medias "360" (JSON_EXTRACT data "url")
        ELIF (EQUAL quality "480p")
            SET_HASH medias "480" (JSON_EXTRACT data "url")
        ELIF (EQUAL quality "720p")
            SET_HASH medias "720" (JSON_EXTRACT data "url")
        ELIF (EQUAL quality "1080p")
            SET_HASH medias "1080" (JSON_EXTRACT data "url")
        FI
    END

EXTRACT_TRACK: |
    SET data (READ data "utf-8")
    SET data (SLICE data "<script type=\"application" "</script>")
    SET title (JSON_EXTRACT_UTF8 data "name")
    SET cover (JSON_EXTRACT data "thumbnailUrl")
    SET index (INDEX_OF cover "?src")
    IF (EQUAL index -1)
        SET index (LAST_INDEX_END cover '_')
        IF (NOT_EQUAL index -1)
            SET cover (MID cover index)
            SET cover (APPEND_CHAR cover "1280.jpg")
        FI
    ELSE
        SET index (ADD index 6)
        SET indexB (INDEX_END cover '_' index)
        IF (NOT_EQUAL indexB -1)
            SET cover (MID cover index (SUB indexB index))
            SET cover (URL_DECODE cover)
            SET cover (APPEND_CHAR cover "1280.jpg")
        FI
    FI
    SET author (JSON_EXTRACT_UTF8 data "author")
    SET feed (JSON_EXTRACT author "url")
    SET feed (URL_PATH feed)
    SET author (JSON_EXTRACT author "name")
    SET duration (JSON_EXTRACT data "duration")
    SET duration (SLICE_IN duration 'T' 'S')
    SET duration (TIME duration "hh'H'mm'M'ss")
    SET date (JSON_EXTRACT data "uploadDate")
    IF (EQUAL date "")
        SET date (JSON_EXTRACT data "datePublished")
    FI
    SET date (MID date 0 (LAST_INDEX_OF date '-'))
    SET date (DATE date "yyyy-MM-ddThh:mm:ss")

EXTRACT_PLAYLIST: |
    SET data (READ data "utf-8")
    IF (EQUAL id 2)
        SET index (INDEX_OF data "<ol class=\"js-browse_list")
        IF (EQUAL index -1)
            SET data (SLICE data "<ul class=\"small-block-grid" "</ul>")
        ELSE
            SET data (SLICE data "<ol class=\"js-browse_list" "</ol>")
        FI
        SET list (SLICES data "<li " "</li>")
        FOREACH list data 3
            SET url (APPEND_CHAR "https://vimeo.com" (HTML_ATTRIBUTE data "href") \
                                 "/videos/page:1/sort:relevant/format:thumbnail")
            APPEND_LIST urls url
        END
        IF (COUNT urls)
            SET_HASH next "url" (TAKE_LIST_AT urls 0)
            IF (COUNT urls)
                SET_HASH next "id" 3
                SET_HASH next "queryData" urls
            ELSE
                SET_HASH next "id" 4
            FI
            SET_HASH next "header" true
        FI
        RETURN
    ELIF (EQUAL id 3)
        SET_HASH next "url" (TAKE_LIST_AT queryData 0)
        IF (COUNT queryData)
            SET_HASH next "id" 3
            SET_HASH next "queryData" queryData
        ELSE
            SET_HASH next "id" 4
        FI
        SET_HASH next "header" true
        SET clearDuplicate true
    ELIF (NOT_EQUAL id 4)
        SET queryId (ADD queryData 1)
        IF (LESSER queryId 3)
            IF (EQUAL id 0)
            AND (EQUAL queryId 1)
                SET json (JSON_EXTRACT_HTML data "itemListElement")
                SET index (LAST_INDEX_OF json "\"name\"")
                SET title (JSON_EXTRACT_UTF8 json "name" index)
            FI
            SET paging (JSON_EXTRACT data "paging")
            IF (EQUAL paging "")
                IF (NOT_EQUAL (INDEX_OF data "<li class=\"pagination_next") -1)
                    SET hasNext true
                FI
            ELIF (NOT_EQUAL (JSON_EXTRACT url "next") "null")
                SET hasNext true
            FI
            IF (hasNext)
                SET url (REPLACE url (APPEND_CHAR "/page:" queryId) \
                                     (APPEND_CHAR "/page:" (ADD queryId 1)))
                SET_HASH next "url" url
                SET_HASH next "id" id
                SET_HASH next "queryData" queryId
                SET_HASH next "header" true
            FI
        FI
        IF (EQUAL id 1)
            SET data (JSON_EXTRACT_HTML data "data")
            SET list (JSON_SPLIT data)
            FOREACH list data
                SET string (JSON_EXTRACT data "privacy")
                IF (EQUAL string "\"view\":\"ptv\"")
                    CONTINUE
                FI
                SET source (JSON_EXTRACT data "uri")
                SET source (MID source 8)
                SET_HASH track "state" "default"
                SET_HASH track "source" (APPEND_CHAR "https://vimeo.com/" source)
                SET_HASH track "title" (JSON_EXTRACT_UTF8 data "name")
                SET cover (JSON_EXTRACT data "pictures")
                SET index (INDEX_OF cover "?src")
                IF (EQUAL index -1)
                    SET index (LAST_INDEX_END cover '_')
                    IF (NOT_EQUAL index -1)
                        SET cover (MID cover 0 index)
                        SET_HASH track "cover" (APPEND_CHAR cover "1280.jpg")
                    FI
                ELSE
                    SET index (ADD index 6)
                    SET indexB (INDEX_END cover '_' index)
                    IF (NOT_EQUAL indexB -1)
                        SET cover (MID cover index (SUB indexB index))
                        SET cover (URL_DECODE cover)
                        SET_HASH track "cover" (APPEND_CHAR cover "1280.jpg")
                    FI
                FI
                APPEND_LIST tracks track
            END
            RETURN
        FI
    ELSE
        SET clearDuplicate true
    FI
    SET data (SLICE data "<ol class=\"js-browse_list" "</ol>")
    SET list (SLICES data "<li " "</li>")
    FOREACH list data
        SET_HASH track "state" "default"
        SET url (HTML_ATTRIBUTE data "href")
        SET index (LAST_INDEX_END url '/')
        IF (NOT_EQUAL index -1)
            SET id (URL_ELEMENT url index)
            IF (NUMBER id)
            AND (EQUAL (CONTAIN url (APPEND_CHAR "/channels/" id)) false)
            AND (EQUAL (CONTAIN url (APPEND_CHAR "/groups/" id)) false)
                SET_HASH track "source" (APPEND_CHAR "https://vimeo.com/" id)
            FI
        FI
        SET_HASH track "title" (HTML_ATTRIBUTE_UTF8 data "title")
        SET cover (HTML_ATTRIBUTE data "srcset")
        SET index (INDEX_OF cover "?src")
        IF (EQUAL index -1)
            SET index (LAST_INDEX_END cover '_')
            IF (NOT_EQUAL index -1)
                SET cover (MID cover 0 index)
                SET_HASH track "cover" (APPEND_CHAR cover "1280.jpg")
            FI
        ELSE
            SET index (ADD index 6)
            SET indexB (INDEX_END cover '_' index)
            IF (NOT_EQUAL indexB -1)
                SET cover (MID cover index (SUB indexB index))
                SET cover (URL_DECODE cover)
                SET_HASH track "cover" (APPEND_CHAR cover "1280.jpg")
            FI
        FI
        APPEND_LIST tracks track
    END

EXTRACT_FOLDER: |
    SET data (READ data "utf-8")
    SET list (JSON_SPLIT (JSON_EXTRACT_HTML data "data"))
    FOREACH list data
        SET_HASH item "type" "feed"
        SET_HASH item "state" "default"
        SET_HASH item "source" (JSON_EXTRACT data "link")
        SET_HASH item "title" (JSON_EXTRACT_UTF8 data "name")
        SET cover (JSON_EXTRACT data "pictures")
        SET cover (JSON_EXTRACT cover "link")
        SET index (INDEX_OF cover "?src")
        IF (EQUAL index -1)
            SET index (LAST_INDEX_END cover '_')
            IF (NOT_EQUAL index -1)
                SET cover (MID cover 0 index)
                SET_HASH item "cover" (APPEND_CHAR cover "1280.jpg")
            FI
        ELSE
            SET index (ADD index 6)
            SET indexB (INDEX_END cover '_' index)
            IF (NOT_EQUAL indexB -1)
                SET cover (MID cover index (SUB indexB index))
                SET cover (URL_DECODE cover)
                SET_HASH item "cover" (APPEND_CHAR cover "1280.jpg")
            FI
        FI
        APPEND_LIST items item
    END
    SET queryId (ADD queryData 1)
    IF (LESSER queryId 3)
        SET paging (JSON_EXTRACT data "paging")
        IF (EQUAL paging "")
            IF (EQUAL (INDEX_OF data "<li class=\"pagination_next") -1)
                RETURN
            FI
        ELIF (EQUAL (JSON_EXTRACT url "next") "null")
            RETURN
        FI
        SET url (REPLACE url (APPEND_CHAR "/page:" queryId) (APPEND_CHAR "/page:" (ADD queryId 1)))
        SET_HASH next "url" url
        SET_HASH next "id" id
        SET_HASH next "queryData" queryId
        SET_HASH next "header" true
    FI
