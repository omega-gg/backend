#--------------------------------------------------------------------------------------------------
# Settings
#--------------------------------------------------------------------------------------------------

api: 1.0.0

version: 1.0.0

title: Vimeo

host: vimeo.com

items:
    playlist:
        title: Tracks
    folder:
        title: People
    folder:
        title: Channels
    folder:
        title: Groups

validate: vimeo.com|player.vimeo.com

#--------------------------------------------------------------------------------------------------
# Interface
#--------------------------------------------------------------------------------------------------

#VALIDATE: |
    #SET url (REMOVE_PREFIX url)
    #RETURN (STARTS_WITH_REGEXP url "vimeo.com|player.vimeo.com")

TRACK_ID: |
    SET id (LAST_INDEX_END url "/")
    IF (EQUALS id -1)
        RETURN ""
    FI
    SET id (EXTRACT_URL_ELEMENT url id)
    IF (EQUALS id 0)
    OR (CONTAINS url (APPEND "/channels/" id))
    OR (CONTAINS url (APPEND "/groups/" id))
        RETURN ""
    FI
    RETURN id

PLAYLIST_INFO: |
    SET url (REMOVE_PREFIX url)
    IF (EQUALS (STARTS_WITH url "vimeo.com") false)
        RETURN
    FI
    IF (STARTS_WITH url "vimeo.com/channels/")
    OR (STARTS_WITH url "vimeo.com/groups/")
        SET type "feed"
        SET id (EXTRACT_URL_ELEMENT url 2 10)
    ELIF (STARTS_WITH url "vimeo.com/")
        SET id (EXTRACT_URL_ELEMENT url 10)
        IF (NUMBER id)
            RETURN
        FI
        SET type "feed"
    FI

URL_TRACK: |
    RETURN (APPEND "https://vimeo.com/" id)

URL_PLAYLIST: |
    RETURN (APPEND "https://vimeo.com/" id)

QUERY_SOURCE: |
    SET id (LAST_INDEX_END url "/")
    IF (EQUALS id -1)
        RETURN
    FI
    SET id (EXTRACT_URL_ELEMENT url id)
    IF (EQUALS id "")
    OR (CONTAINS url (APPEND "/channels/" id))
    OR (CONTAINS url (APPEND "/groups/" id))
        RETURN
    FI
    SET url (APPEND "https://player.vimeo.com/video/" id)

QUERY_TRACK: |
    SET id (LAST_INDEX_END url "/")
    IF (EQUALS id -1)
        RETURN
    FI
    SET id (EXTRACT_URL_ELEMENT url id)
    IF (EQUALS id "")
    OR (CONTAINS url (APPEND "/channels/" id))
    OR (CONTAINS url (APPEND "/groups/" id))
        RETURN
    FI
    SET url (APPEND "https://vimeo.com/" id)

QUERY_PLAYLIST: |
    SET url (REMOVE_PREFIX url)
    IF (EQUALS (STARTS_WITH url "vimeo.com") false)
        RETURN
    FI
    IF (STARTS_WITH url "vimeo.com/channels/")
    OR (STARTS_WITH url "vimeo.com/groups/")
        SET id (EXTRACT_URL_ELEMENT url 2 10)
    ELIF (STARTS_WITH url "vimeo.com/")
        SET id (EXTRACT_URL_ELEMENT url 10)
        IF (NUMBER id)
            RETURN
        FI
    FI
    IF (EQUALS id "")
        RETURN
    FI
    IF (STARTS_WITH id "tag:")
        SET url (APPEND "https://vimeo.com/" id)
        APPEND url "/page:1/sort:date/format:thumbnail"
    ELSE
        SET url (APPEND "https://vimeo.com/" id)
        APPEND url "/videos/page:1/sort:date/format:thumbnail"
    FI

CREATE_QUERY: |
    IF (EQUALS method "search")
        IF (EQUALS label "tracks")
            SET url "https://vimeo.com/search/page:1/sort:relevant/format:thumbnail"
            ADD_QUERY url "q" q
            ADD_QUERY url "type" "video"
            SET id 1
            SET header true
        ELIF (EQUALS label "people")
            SET url "https://vimeo.com/search/people/page:1/sort:relevant/format:thumbnail"
            ADD_QUERY url "q" q
            SET id 1
            SET header true
        ELIF (EQUALS label "channels")
            SET url "https://vimeo.com/search/channels/page:1/sort:relevant/format:thumbnail"
            ADD_QUERY url "q" q
            SET header true
        ELIF (EQUALS label "groups")
            SET url "https://vimeo.com/search/groups/page:1/sort:relevant/format:thumbnail"
            ADD_QUERY url "q" q
            SET header true
        FI
    ELIF (EQUALS method "related")
    AND (EQUALS label "tracks")
        SET url (APPEND "https://vimeo.com/" q)
        APPEND url "/collections/channels/sort:relevant/format:thumbnail"
        SET id 2
    FI

EXTRACT_SOURCE: |
    SET data (READ data "utf-8")
    SET data (EXTRACT_JSON_HTML data "progressive")
    SET list (SPLIT_JSON data)
    FOREACH list data
        SET quality (EXTRACT_JSON data "quality")
        IF (EQUALS quality "270p")
            SET_HASH medias "240" (EXTRACT_JSON data "url")
        ELIF (EQUALS quality "360p")
            SET_HASH medias "360" (EXTRACT_JSON data "url")
        ELIF (EQUALS quality "480p")
            SET_HASH medias "480" (EXTRACT_JSON data "url")
        ELIF (EQUALS quality "720p")
            SET_HASH medias "720" (EXTRACT_JSON data "url")
        ELIF (EQUALS quality "1080p")
            SET_HASH medias "1080" (EXTRACT_JSON data "url")
        FI
    END

EXTRACT_TRACK: |
    SET data (READ data "utf-8")
    SET data (SLICE data "<script type=\"application" "</script>")
    SET title (EXTRACT_JSON_UTF8 data "name")
    SET cover (EXTRACT_JSON data "thumbnailUrl")
    SET index (INDEX_OF cover "?src")
    IF (EQUALS index -1)
        SET index (LAST_INDEX_END cover '_')
        IF (NOT_EQUALS index -1)
            SET cover (MID cover index)
            SET cover (APPEND cover "1280.jpg")
        FI
    ELSE
        SET index (ADD index 6)
        SET indexB (INDEX_END cover '_' index)
        IF (NOT_EQUALS indexB -1)
            SET cover (MID cover index (SUB indexB index))
            SET cover (DECODE_URL cover)
            SET cover (APPEND cover "1280.jpg")
        FI
    FI
    SET author (EXTRACT_JSON_UTF8 data "author")
    SET feed (EXTRACT_JSON author "url")
    SET feed (EXTRACT_URL_PATH feed)
    SET author (EXTRACT_JSON author "name")
    SET duration (EXTRACT_JSON data "duration")
    SET duration (SLICE_IN duration 'T' 'S')
    SET duration (TIME duration "hh'H'mm'M'ss")
    SET date (EXTRACT_JSON data "uploadDate")
    IF (EQUALS date "")
        SET date (EXTRACT_JSON data "datePublished")
    FI
    SET date (MID date 0 (LAST_INDEX_OF date '-'))
    SET date (DATE date "yyyy-MM-ddThh:mm:ss")
    SET quality (EXTRACT_JSON data "videoQuality")
    IF (EQUALS quality "HD")
        SET quality "720"
    ELSE
        SET quality "480"
    FI

EXTRACT_PLAYLIST: |
    SET data (READ data "utf-8")
    IF (EQUALS id 2)
        SET index (INDEX_OF data "<ol class=\"js-browse_list")
        IF (EQUALS index -1)
            SET data (SLICE data "<ul class=\"small-block-grid" "</ul>")
        ELSE
            SET data (SLICE data "<ol class=\"js-browse_list" "</ol>")
        FI
        SET list (SLICES data "<li " "</li>")
        FOREACH list data 3
            SET url "https://vimeo.com"
            APPEND url (EXTRACT_ATTRIBUTE data "href")
            APPEND url "/videos/page:1/sort:relevant/format:thumbnail"
            APPEND_LIST urls url
        END
        IF (COUNT urls)
            SET_HASH next "url" (TAKE urls 0)
            IF (COUNT urls)
                SET_HASH next "id" 3
                SET_HASH next "queryData" urls
            ELSE
                SET_HASH next "id" 4
            FI
            SET_HASH next "header" true
        FI
        RETURN
    ELIF (EQUALS id 3)
        SET_HASH next "url" (TAKE queryData 0)
        IF (COUNT queryData)
            SET_HASH next "id" 3
            SET_HASH next "queryData" queryData
        ELSE
            SET_HASH next "id" 4
        FI
        SET_HASH next "header" true
        SET clearDuplicate true
    ELIF (NOT_EQUALS id 4)
        SET queryId (ADD queryData 1)
        IF (LESSER queryId 3)
            IF (EQUALS id 0)
            AND (EQUALS queryId 1)
                SET json (EXTRACT_JSON_HTML data "itemListElement")
                SET index (LAST_INDEX_OF json "\"name\"")
                SET title (EXTRACT_JSON_UTF8 json "name" index)
            FI
            SET paging (EXTRACT_JSON data "paging")
            IF (EQUALS paging "")
                IF (NOT_EQUALS (INDEX_OF data "<li class=\"pagination_next") -1)
                    SET hasNext true
                FI
            ELIF (NOT_EQUALS (EXTRACT_JSON url "next") "null")
                SET hasNext true
            FI
            IF hasNext
                REPLACE url (APPEND "/page:" queryId) (APPEND "/page:" (ADD queryId 1))
                SET_HASH next "url" url
                SET_HASH next "id" id
                SET_HASH next "queryData" queryId
                SET_HASH next "header" true
            FI
            IF (EQUALS id 1)
                SET data (EXTRACT_JSON_HTML data "data")
                SET list (SPLIT_JSON data)
                FOREACH list data
                    SET string (EXTRACT_JSON data "privacy")
                    IF (EQUALS string "\"view\":\"ptv\"")
                        CONTINUE
                    FI
                    SET source (EXTRACT_JSON data "uri")
                    SET source (MID source 8)
                    SET_HASH track "state" "default"
                    SET_HASH track "source" (APPEND "https://vimeo.com/" source)
                    SET_HASH track "title" (EXTRACT_JSON_UTF8 data "name")
                    SET cover (EXTRACT_JSON data "pictures")
                    SET index (INDEX_OF cover "?src")
                    IF (EQUALS index -1)
                        SET index (LAST_INDEX_END cover '_')
                        IF (NOT_EQUALS index -1)
                            SET cover (MID cover 0 index)
                            SET_HASH track "cover" (APPEND cover "1280.jpg")
                        FI
                    ELSE
                        SET index (ADD index 6)
                        SET indexB (INDEX_END cover '_' index)
                        IF (NOT_EQUALS indexB -1)
                            SET cover (MID cover index (SUB indexB index))
                            SET cover (DECODE_URL cover)
                            SET_HASH track "cover" (APPEND cover "1280.jpg")
                        FI
                    FI
                    APPEND_LIST tracks track
                END
                RETURN
            FI
        FI
    ELSE
        SET clearDuplicate true
    FI
    SET data (SLICE data "<ol class=\"js-browse_list" "</ol>")
    SET list (SLICES data "<li " "</li>")
    FOREACH list data
        SET_HASH track "state" "default"
        SET url (EXTRACT_ATTRIBUTE data "href")
        SET index (LAST_INDEX_END url '/')
        IF (NOT_EQUALS index -1)
            SET id (EXTRACT_URL_ELEMENT url index)
            IF (NOT_EQUALS (NUMBER id) 0)
            AND (EQUALS (CONTAINS url (APPEND "/channels/" id)) false)
            AND (EQUALS (CONTAINS url (APPEND "/groups/" id)) false)
                SET_HASH track "source" (APPEND "https://vimeo.com/" id)
            FI
        FI
        SET_HASH track "title" (EXTRACT_ATTRIBUTE_UTF8 data "title")
        SET cover (EXTRACT_ATTRIBUTE data "srcset")
        SET index (INDEX_OF cover "?src")
        IF (EQUALS index -1)
            SET index (LAST_INDEX_END cover '_')
            IF (NOT_EQUALS index -1)
                SET cover (MID cover 0 index)
                SET_HASH track "cover" (APPEND cover "1280.jpg")
            FI
        ELSE
            SET index (ADD index 6)
            SET indexB (INDEX_END cover '_' index)
            IF (NOT_EQUALS indexB -1)
                SET cover (MID cover index (SUB indexB index))
                SET cover (DECODE_URL cover)
                SET_HASH track "cover" (APPEND cover "1280.jpg")
            FI
        FI
        APPEND_LIST tracks track
    END

EXTRACT_FOLDER: |
    SET data (READ data "utf-8")
    SET list (SPLIT_JSON (EXTRACT_JSON_HTML data "data"))
    FOREACH list data
        SET_HASH item "type" "feed"
        SET_HASH item "state" "default"
        SET_HASH item "source" (EXTRACT_JSON data "link")
        SET_HASH item "title" (EXTRACT_JSON_UTF8 data "name")
        SET cover (EXTRACT_JSON data "pictures")
        SET cover (EXTRACT_JSON cover "link")
        SET index (INDEX_OF cover "?src")
        IF (EQUALS index -1)
            SET index (LAST_INDEX_END cover '_')
            IF (NOT_EQUALS index -1)
                SET cover (MID cover 0 index)
                SET_HASH item "cover" (APPEND cover "1280.jpg")
            FI
        ELSE
            SET index (ADD index 6)
            SET indexB (INDEX_END cover '_' index)
            IF (NOT_EQUALS indexB -1)
                SET cover (MID cover index (SUB indexB index))
                SET cover (DECODE_URL cover)
                SET_HASH item "cover" (APPEND cover "1280.jpg")
            FI
        FI
        APPEND_LIST items item
    END
    SET queryId (ADD queryData 1)
    IF (LESSER queryId 3)
        SET paging (EXTRACT_JSON data "paging")
        IF (EQUALS paging "")
            IF (EQUALS (INDEX_OF data "<li class=\"pagination_next") -1)
                RETURN
            FI
        ELIF (EQUALS (EXTRACT_JSON url "next") "null")
            RETURN
        FI
        REPLACE url (APPEND "/page:" queryId) (APPEND "/page:" (ADD queryId 1))
        SET_HASH next "url" url
        SET_HASH next "id" id
        SET_HASH next "queryData" queryId
        SET_HASH next "header" true
    FI
